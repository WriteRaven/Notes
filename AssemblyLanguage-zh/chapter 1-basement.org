* 基础知识（CPU外部通讯）

** 与机器和高级语言关系

*** 与机器语言关系
    1.机器语言
      由二进制语言（0.1）组成的能够被计算机直接运行的语言。
    2.汇编语言与机器语言的关系
      相较于密密麻麻的01的机器语言，汇编语言具有易操作性，更适合人类操作。
     
      汇编语言与机器语言存在一一对应关系，汇编指令通过编译器生成机器码。
      鉴于一一对应的关系，可以将程序的机器语言revease成汇编语言。这是实现程序破译的主要手段。

*** 与高级语言关系
    1.高级语言
      例如c++，java等都是高级语言。
     
     
 
** 组成

   1.汇编指令(机器码的助记符)-核心
     | key  | function |
     |------+----------|
     | JUMP | jump     |
     | ROM  | remove   |
     | ...  | ...      |

   2.伪指令(由编译器执行)
   3.其他符号(由编译器识别）
   
** 存储器(内存)

   1. defination
     存放指令和数据

   2. 内存与寄存器
      内存是存储器之一

   3. CPU与寄存器
      类似汽车引擎和油箱的关系。
      
      CPU是计算机的核心部件，它控制整个计算机的运行并进行运算，
      想要让一个CPU工作，就必须向它提供指令和数据。
      而指令和数据存放于寄存器中，所以二者需要相互配合计算机才能正常运行。

   4. 硬盘与存储器
      类似于油箱和加油站的关系。

      硬盘上的数据和代码需要加载到存储器中，才能被CPU运行。

   5. 据和指令
      二者都是应用上的概念，在内存或磁盘上，二者都是二进制信息。
            
   6. 存储单元
      存储器被划分到若干存储单元，每个存储单元从0开始编号
      
     
** 指令和数据
   指令和数据是应用上的概念。
   在内存或磁盘上，指令和数据没有任何区别，都是二进制信息

** CPU对存储器的读写
   
   1. CPU要想进行数据的读写必须和外部器件(即芯片)进行三种信息的交互

      1. 存储单元的地址 - 地址信息

      2. 器件的选择，读或写命令 - 控制信息

      3. 读或写的数据 - 数据信息

   2. CPU与寄存器的信息传输

      1. 总线
        
         在计算机中专门连接CPU和其它芯片(寄存器)的导线.
         总线通过CPU上的管脚与CPU连接。

      2. 物理划分
         一根根导线的集合。
         
      3. 逻辑划分
         
         1. 总线逻辑划分示意图
           [[./src/basement-bus logic division.png]]

         2. 地址总线
            - 概念
              CPU 是通过地址总线来指定存储单元。
            
            - 地址宽度 - CPU寻址能力
              地址总线上能传送n个不同的信息，CPU就可以对n个存储单元进行寻址。
              一个CPU有N根地址总线，则这个CPU的地址总线的宽度为N。CPU最多可以寻找2^(n)个存储单元。
              可以说，地址总线的数量影响计算机运行速度。

              并且，CPU的位数取决与地址总线的数量，eg：64位CPU有64跟地址总线。
              ps:64位PC = 64位CPU + 64位操作系统 + 64位软件

            - 地址总线数据传送示意图
              [[./src/basement-address bus.png]]

         3. 数据总线
            - 概念
              CPU通过数据总线与内存或其它器件进行数据传送。
              
            - 数据宽度 - 数据传送量/次
              数据总线的宽度决定了CPU和外界的数据传送速度，
              其决定计算机运行速度。

            - 数据总线数据传送示意图
              [[./src/basement-data bus.png]]

         4. 控制总线
            - 概念
              CPU通过控制总线实现对外部器件的控制。

            - 控制宽度 - 对器件的控制能力
              控制总线是一些不同控制线的集合。
              宏观上，有n根控制线，意味着CPU对外部期间提供n种控制。    
              所以控制总线的宽度决定对外部器件的控制能力。

            - 控制总线数据传送示意图
              [[./src/basement-control bus.png]]

   3. CPU对存储器的读写示意图
      - 对数据的读取

        [[./src/basement-cpu read action.png]]
    
      - 对数据的写入
        
        [[./src/basement-cpu write action.png]]


** 内存地址空间
   
   1. 主板
       
      每个PC机，都有一个主板，主板上有核心器件和主要器件。
      其上器件通过总线相连。
      
   2. 接口卡
     
      计算机系统中，所有可用程序控制其工作的设备必须受CPU的控制。
      CPU对外部设备并非直接控制，直接控制这些设备进行工作的是插在扩展槽上的接口卡。
      如显示器，打印机。

   3. 存储器
      
      1. 从读写属性上分类
          
         1. 随机存储器(RAM)
             
            - 特点
              断电后，存储器内部数据会丢失
              e.g.内存
             
         2. 只读存储器(ROM)
             
            - 特点
               只能读取，断电后数据不丢失
               e.g.装有BIOS的ROM
               
      2. 从功能和连接上分类
          
         1. 随机存储器RAM
         
         2. 装有BIOS的ROM
             
         3. 接口卡上的RAM

      3. PC机各类存储器的逻辑连接情况
         [[./src/basement-memory logic on pc.png]]

      4. 各类存储器共性

         1. 都与CPU总线相连

         2. CPU对它们进行读或写的时候都通过控制线发出内存读写命令

      5. 逻辑存储器
         1. 概念
            所有物理存储器被看作一个由若干存储单元组成的逻辑存储器。
            每个物理存储器在这个逻辑存储器中占有一个地址段，即一段地址空间。
            CPU在这段地址空间中读写数据，实际上实在对应的物理存储器中读写数据。

         2. 示意图
            [[./src/basement-memories as a logic one.png]]

   4. 内存地址空间       
      - 定义
        CPU逻辑上将各类寄存器看作一个统一的逻辑寄存器，这个逻辑寄存器就是所说的内存地址空间。
        最终运行程序的是CPU，要用汇编的思维编程，从CPU的角度考虑（该门课程的核心思维）
   
        


